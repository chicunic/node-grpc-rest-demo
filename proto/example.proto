syntax = "proto3";

package example;

// =============================================================================
// SERVICES
// =============================================================================

// User service for CRUD operations
service UserService {
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

// Product service for product management
service ProductService {
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  rpc SearchProducts(SearchProductsRequest) returns (SearchProductsResponse);
}

// =============================================================================
// DATA MODELS
// =============================================================================

// User data model
message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string full_name = 4;
  string created_at = 5;
  string updated_at = 6;
  bool is_active = 7;
}

// Product data model
message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  int32 quantity = 5;
  string category = 6;
  string created_at = 7;
  string updated_at = 8;
}

// =============================================================================
// USER SERVICE MESSAGES
// =============================================================================

// Get User
message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

// Create User
message CreateUserRequest {
  string username = 1;
  string email = 2;
  string full_name = 3;
}

message CreateUserResponse {
  User user = 1;
}

// Update User
message UpdateUserData {
  optional string username = 1;
  optional string email = 2;
  optional string full_name = 3;
  optional bool is_active = 4;
}

message UpdateUserRequest {
  string id = 1;
  UpdateUserData data = 2;
}

message UpdateUserResponse {
  User user = 1;
}

// Delete User
message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}

// List Users
message ListUsersRequest {
  int32 page = 1;
  int32 page_size = 2;
  optional string sort_by = 3;
  optional string filter = 4;
}

message ListUsersResponse {
  repeated User users = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

// =============================================================================
// PRODUCT SERVICE MESSAGES
// =============================================================================

// Get Product
message GetProductRequest {
  string id = 1;
}

message GetProductResponse {
  Product product = 1;
}

// Create Product
message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
  int32 quantity = 4;
  string category = 5;
}

message CreateProductResponse {
  Product product = 1;
}

// Search Products
message SearchProductsRequest {
  optional string query = 1;
  optional string category = 2;
  optional double min_price = 3;
  optional double max_price = 4;
  int32 page = 5;
  int32 page_size = 6;
}

message SearchProductsResponse {
  repeated Product products = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}
